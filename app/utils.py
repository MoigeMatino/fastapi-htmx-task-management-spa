from fastapi import HTTPException
from sqlmodel import Session, select

from app.models import Todo, TodoCreate


def db_get_todos(session: Session):
    statement = select(Todo)
    todos = session.exec(statement).all()
    return todos


def db_create_todo(session: Session, todo_data: TodoCreate):
    todo = Todo.model_validate(todo_data)
    try:
        session.add(todo)
        # Add the `Todo` instance to the database
        session.add(todo)
        session.commit()

        # to ensure object has latest information from autogenerated id field
        session.refresh(todo)
        return todo

    except Exception as e:
        # Handle the exception
        session.rollback()
        raise HTTPException(status_code=400, detail=f"Error creating todo: {str(e)}")


def db_update_todo(session: Session, todo_id: str, title: str):
    statement = select(Todo).where(Todo.id == todo_id)
    todo = session.exec(statement).first()
    if not todo:
        raise HTTPException(status_code=404, detail="Todo not found")
    todo.title = title
    session.add(todo)
    session.commit()
    session.refresh(todo)
    return todo


def db_toggle_todo(session: Session, todo_id: str):
    statement = select(Todo).where(Todo.id == todo_id)
    todo = session.exec(statement).first()
    if not todo:
        raise HTTPException(status_code=404, detail="Todo not found")

    # Toggle the done status
    todo.done = not todo.done
    # Commit changes
    session.add(todo)
    session.commit()
    session.refresh(todo)
    return todo
